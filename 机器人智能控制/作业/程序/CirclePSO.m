%%%%%%% 初始化种群
%%%%测试函数
f= @(x)x .* sin(3.*x) .* cos(2 * x) - 2 * x .* sin(3 * x); 
figure(1);
ezplot(f,[0,0.01,20]);
N = 64;                         % 初始种群个数
d = 1;                          % 空间维数
ger = 300;                      % 最大迭代次数     
limit = [0, 20];                % 设置位置参数限制
vlimit = [-1, 1];               % 设置速度限制
w = 0.8;                        % 惯性权重
c1 = 0.5;                       % 自我学习因子
c2 = 0.5;                       % 群体学习因子 
for i = 1:d
    x = limit(i, 1) + (limit(i, 2) - limit(i, 1)) * rand(N, d);%初始种群的位置
end
v = rand(N, d);                  % 初始种群的速度
xm = x;                          % 每个个体的历史最佳位置
ym = zeros(1, d);                % 种群的历史最佳位置
localindex = zeros(N,1);
IndivBest = zeros(N, 1);               % 每个个体的历史最佳适应度
fym = -inf;                      % 种群历史最佳适应度
LocalBest = zeros(N,1);
plot(xm, f(xm), 'r*');title('初始状态图');
figure(2)
hold on
%%%%%%% 群体更新
iter = 1;
record = zeros(ger, 1);          %%%%%%记录
     fx = f(x) ; % 个体当前适应度   
     for i = 1:N      
        if IndivBest(i) < fx(i)
            IndivBest(i) = fx(i);     % 更新个体历史最佳适应度
            xm(i,:) = x(i,:);   % 更新个体历史最佳位置
        end 
     end
     %%%%每个粒子和下一个粒子进行比较
     for j = 1:N
         if j == N
            if IndivBest(N) < IndivBest(1)
               LocalBest(N) = IndivBest(1);
               localindex(N) = xm(1,:);
            else
               LocalBest(N) = IndivBest(N);
               localindex(N) = xm(N,:);
            end
         elseif IndivBest(j) < IndivBest(j+1)
             LocalBest(i) = IndivBest(j+1);
             localindex(j) = xm(j+1,:);
         else
             LocalBest(j) = IndivBest(j);
             localindex(j) = xm(j,:);
         end
     end
     
     if fym < max(IndivBest)
         [fym, nmax] = max(IndivBest);   % 更新群体历史最佳适应度
         ym = xm(nmax, :);      % 更新群体历史最佳位置
     end
%      v = v * w + c1 * rand * (xm - x) + c2 * rand * (repmat(ym, N, 1) - x);% 速度更新
     v = v * w + c1 * rand * (xm - x) + c2 * rand * (localindex - x);% 速度更新
     % 边界速度处理
     v(v > vlimit(2)) = vlimit(2);
     v(v < vlimit(1)) = vlimit(1);
     x = x + v;% 位置更新
     % 边界位置处理
     x(x > limit(2)) = limit(2);
     x(x < limit(1)) = limit(1);
     record(iter) = fym;%最大值记录
     x0 = 0 : 0.01 : 20;
     plot(x0, f(x0), 'b-', x, f(x), 'r*');title('粒子位置变化')
     pause(0.05)
     iter = iter+1;
end
figure(3);plot(record);title('收敛过程')
xlabel('迭代次数')
ylabel('y')
x0 = 0 : 0.01 : 20;
figure(4);plot(x0, f(x0), 'b-', x, f(x), 'r*');
title('粒子最终位置')
xlabel('x')
ylabel('y')
disp(['最大值：',num2str(fym)]);